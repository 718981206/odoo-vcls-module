<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
       
        <!-- Employees can only see their own contract -->
         <record id="hr_contract_employee_rule" model="ir.rule">
            <field name="name">hr_contract_employee_rule: employee sees owns </field>
            <field name="model_id" ref="hr_contract.model_hr_contract"/>
            <field name="perm_read" eval="1"/>
            <field name="perm_write" eval="0"/>
            <field name="perm_create" eval="0"/>
            <field name="perm_unlink" eval="0"/>
            <field name="domain_force">[
                    ('employee_id.user_id', '=', user.id),
            ]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        </record>
        
        <!-- Employees can only see their own confidential -->
         <record id="hr_confidential_employee_rule" model="ir.rule">
            <field name="name">hr_confidential_employee_rule: employee sees owns </field>
            <field name="model_id" ref="vcls-hr.model_hr_employee_confidential"/>
            <field name="perm_read" eval="1"/>
            <field name="perm_write" eval="0"/>
            <field name="perm_create" eval="0"/>
            <field name="perm_unlink" eval="0"/>
            <field name="domain_force">[
                    ('employee_id.user_id', '=', user.id),
            ]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        </record>
        
        <!-- Employees can only see their own bonuses -->
         <record id="hr_bonus_employee_rule" model="ir.rule">
            <field name="name">hr_bonus_employee_rule: employee sees owns </field>
            <field name="model_id" ref="vcls-hr.model_hr_bonus"/>
            <field name="perm_read" eval="1"/>
            <field name="perm_write" eval="0"/>
            <field name="perm_create" eval="0"/>
            <field name="perm_unlink" eval="0"/>
            <field name="domain_force">[
                    ('employee_id.user_id', '=', user.id),
            ]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        </record>
        
        <!-- Employees can only see their own benefits -->
         <record id="hr_benefit_employee_rule" model="ir.rule">
            <field name="name">hr_benefit_employee_rule: employee sees owns </field>
            <field name="model_id" ref="vcls-hr.model_hr_benefit"/>
            <field name="perm_read" eval="1"/>
            <field name="perm_write" eval="0"/>
            <field name="perm_create" eval="0"/>
            <field name="perm_unlink" eval="0"/>
            <field name="domain_force">[
                    ('employee_id.user_id', '=', user.id),
            ]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        </record>
        
        <!-- LEAVES RULES -->
        <!-- Deactivate the multicompany rules -->
        <record id="hr_holidays.hr_leave_rule_multicompany" model="ir.rule">
            <field name="active" eval="False"/>
        </record>
        <record id="hr_holidays.hr_holidays_status_rule_multi_company" model="ir.rule">
            <field name="active" eval="False"/>
        </record>
        
        <!-- Deactivate the read all rule for employees -->
        <record id="hr_holidays.hr_leave_rule_employee" model="ir.rule">
            <field name="active" eval="False"/>
        </record>
        
        <!-- Employees can only create leaves for themselves, whatever the status -->
        <record id="hr_holidays.hr_leave_rule_employee_update" model="ir.rule">
            <field name="name">employee can only create/modify/delete for himself</field>
            <field name="model_id" ref="hr_holidays.model_hr_leave"/>
            <field name="perm_read" eval="1"/>
            <field name="perm_write" eval="1"/>
            <field name="perm_create" eval="1"/>
            <field name="perm_unlink" eval="1"/>
            <field name="domain_force">[
                    ('employee_id.user_id', '=', user.id),
            ]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        </record>
        
    </data>
</odoo>